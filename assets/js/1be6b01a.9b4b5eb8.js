"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6103],{4986:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>s,metadata:()=>a,toc:()=>p});var r=n(2540),o=n(3023);const s={sidebar_position:4},i="TypeScript",a={id:"typescript",title:"TypeScript",description:"This package is written in TypeScript. So you don't need to create your own types. Here an example if you use TypeScript.",source:"@site/docs/typescript.md",sourceDirName:".",slug:"/typescript",permalink:"/docusaurus-mono-starter/docs/typescript",draft:!1,unlisted:!1,editUrl:"https://github.com/hyperse-io/docusaurus-mono-starter/docs/typescript.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"TextField inheritance",permalink:"/docusaurus-mono-starter/docs/inheritance"},next:{title:"CSS",permalink:"/docusaurus-mono-starter/docs/css"}},c={},p=[];function u(e){const t={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"typescript",children:"TypeScript"})}),"\n",(0,r.jsxs)(t.p,{children:["This package is written in ",(0,r.jsx)(t.strong,{children:"TypeScript"}),". So you don't need to create your own types. Here an example if you use ",(0,r.jsx)(t.strong,{children:"TypeScript"}),"."]}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Nota bene"}),": Props are defined within the ",(0,r.jsx)(t.code,{children:"MuiColorInputProps"})," interface."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-jsx",children:"import React from 'react';\nimport {\n  MuiColorInput,\n  MuiColorInputColors,\n  MuiColorInputFormat,\n  MuiColorInputValue,\n} from 'mui-color-input';\n\nconst MyComponent = () => {\n  const [value, setValue] = React.useState<MuiColorInputValue>('#ffffff');\n\n  const handleChange = (newValue: string, colors: MuiColorInputColors) => {\n    setValue(newValue);\n  };\n\n  const format: MuiColorInputFormat = 'hex';\n\n  return (\n    <MuiColorInput value={value} onChange={handleChange} format={format} />\n  );\n};\n"})})]})}function l(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}}}]);